var questionAnswerAppConfig=function(e,t,n){var o=function(e){return"templates/"+e+".html"},r="vm";n.interceptors.push("errorHandlerHttpInterceptor"),n.defaults.headers.common["X-Requested-With"]="XMLHttpRequest",t.html5Mode(!0),e.when("/",{templateUrl:o("home"),controller:"HomeController",controllerAs:r}).when("/question/list-questions",{templateUrl:o("question/list-questions"),controller:"QuestionsController",controllerAs:r}).when("/question/ask-question",{templateUrl:o("question/ask-question"),controller:"AskQuestionsController",controllerAs:r}).otherwise({redirectTo:"/"})};angular.module("templates",[]);var questionAndAnswer=angular.module("QuestionAndAnswer",["ngResource","ngRoute","ngCookies","ngSanitize","ngAnimate","templates"]).config(questionAnswerAppConfig).value("toastr",toastr).constant("serverRoutes",{currentUser:"api/currentUser"}).constant("author","Webdude").constant("appName","Question & Answer").constant("authorLink","http://webdude.eu").constant("appTitle","Question & Answer");var questionAndAnswer=angular.module("QuestionAndAnswer");questionAndAnswer.factory("QuestionResource",function(e){return e("/api/questions",null,{getAll:{method:"GET"},createNew:{method:"POST"},query:{method:"GET",isArray:!1}})});questionAndAnswer.factory("errorHandlerHttpInterceptor",["$q","errorHandler",function(r,e){return{responseError:function(n){return e.processError(n),r.reject(n)}}}]);questionAndAnswer.factory("identity",function(){return{isAuthenticated:function(){return!!this.currentUser},isAuthorizedForRole:function(r){return!!this.currentUser&&this.currentUser.roles.indexOf(r)>-1},isAuthorizedForAnyOfTheFollowingRoles:function(r){return r.any(this.isAuthorizedForRole)},authToken:function(){var r=this.currentUser;return r?btoa(r.username+":"+r.password):void 0},loggedInUser:function(){return this.isAuthenticated()?this.currentUser.firstName+" "+this.currentUser.lastName:void 0}}});questionAndAnswer.factory("auth",function(e,r,t,n){var o=function(){var r={};e.get(n.currentUser).then(function(e){200===e.status&&e.data.principal&&(angular.extend(r,e.data.principal),t.currentUser=r)})};return{alredyLoggedIn:function(){this.haveCheckedLogin||o(),this.haveCheckedLogin=!0},login:function(o){var i=o?{authorization:"Basic "+btoa(o.username+":"+o.password)}:{},a=r.defer();return e.get(n.currentUser,{headers:i}).then(function(e){if(200===e.status&&e.data.principal){var r={};angular.extend(r,e.data.principal),t.currentUser=r,a.resolve(!0)}else a.resolve(!1)},function(e){a.reject(e)}),a.promise},logout:function(){e.get(n.currentUser,{headers:{authorization:"Basic "+btoa("wrong:wrong")}}).then(function(e){if(401===e.status){var r={};t.currentUser=r,o.resolve(!0)}else o.resolve(!1)},function(e){o.reject(e)});var o=r.defer();t.currentUser=void 0},isAuthenticated:function(){return t.isAuthenticated()?!0:r.reject("not authorized")},isAuthorizedForRole:function(e){return t.isAuthorizedForRole(e)?!0:r.reject("not authorized")},isAuthorizedForAnyOfTheFollowingRoles:function(e){if(!(e instanceof Array))throw new Error("The method expects an array");return t.isAuthorizedForAnyOfTheFollowingRoles(e)?!0:r.reject("not authorized")}}});questionAndAnswer.controller("QuestionsController",function(e,t,s){this.request={sort:"title",page:1,size:5,sortDirection:"asc"},this["delete"]=function(e){t["delete"](e._links.self.href).then(function(){s.success("Deleted!")},s.error)},this.query=function(t){return t.page<1?void(t.page=1):t.size<1?void(t.size=1):void(this.list=e.query({sort:[t.sort,t.sortDirection].join(","),page:t.page-1,size:t.size}))},this.query(this.request)});questionAndAnswer.controller("AskQuestionsController",function(e,n,r){this.submit=function(n){n.user="/api/users/"+r.currentUser.id,e.createNew(n)}});questionAndAnswer.controller("LoginController",function(o,n,t,i){this.identity=i,this.login=function(o){t.login(o).then(function(o){o?n.success("Successful login!"):n.error("Login failed")},n.error)},this.logout=function(){t.logout(),n.success("Successful logout!"),this.user={},o.path("/")}});questionAndAnswer.factory("notifier",function(s){return{success:function(e){s.success(e)},error:function(e){return e?(e.data&&e.data.message&&(e=e.data.message),e.statusText&&(e=e.statusText),e.message&&(e=e.message),void s.error(e)):void s("no message")}}});questionAndAnswer.factory("errorHandler",function(r,o){return{processError:function(e){if(e.error_description&&r.error(e.error_description),e.data&&(r.error(e.data),o.path("/not-found")),e.reason&&(r.error(e.reason),o.path("/not-found")),e.modelState){var n=e.modelState;for(var t in n)for(var a=n[t],d=t.substr(t.indexOf(".")+1),i=0;i<a.length;i++){var s=a[i];r.error(d+" - "+s)}}}}});questionAndAnswer.controller("PageController",function(e,n,o,t,r,i){i.isAuthenticated()||r.alredyLoggedIn(),e.viewModel={author:n,authorLink:t,appTitle:o}});questionAndAnswer.controller("HomeController",function(){});angular.module("templates").run(["$templateCache", function($templateCache) {$templateCache.put("templates/home.html","");
$templateCache.put("templates/account/login.html","<div ng-controller=\"LoginController as vm\" class=\"navbar-right\">\r\n	<form ng-hide=\"vm.identity.isAuthenticated()\" class=\"navbar-form\">\r\n		<div class=\"form-group\">\r\n			<input type=\"text\" placeholder=\"Username\" ng-model=\"vm.user.username\" class=\"form-control\" /><input type=\"password\"\r\n				placeholder=\"Password\" ng-model=\"vm.user.password\" class=\"form-control\" />\r\n		</div>\r\n		<button ng-click=\"vm.login(vm.user)\" class=\"btn btn-primary\">Login</button>\r\n		<a href=\"#/signup\" class=\"btn btn-primary\">Sign Up</a>\r\n	</form>\r\n	<ul ng-show=\"vm.identity.isAuthenticated()\" class=\"nav navbar-nav navbar-right\">\r\n		<li class=\"dropdown\">\r\n		<a href=\"\" data-toggle=\"dropdown\" class=\"dropdown-toggle\">{{vm.identity.loggedInUser()}}<span class=\"caret\"></span></a>\r\n			<ul class=\"dropdown-menu\">\r\n				<li><a href=\"#\" ng-click=\"vm.logout()\">Sign Out</a></li>\r\n			</ul>\r\n		</li>\r\n	</ul>\r\n</div>");
$templateCache.put("templates/question/ask-question.html","<form>\r\n	<div class=\"form-group\">\r\n		<label for=\"title\" class=\"col-md-2 control-label\">Title</label>\r\n		<div class=\"col-md-10\">\r\n			<input type=\"text\" ng-model=\"vm.question.title\" id=\"title\" placeholder=\"Title\" class=\"form-control\">\r\n		</div>\r\n	</div>\r\n	<div class=\"form-group\">\r\n		<label for=\"content\" class=\"col-md-2 control-label\">Content</label>\r\n		<div class=\"col-md-10\">\r\n			<input type=\"text\" ng-model=\"vm.question.content\" id=\"content\" placeholder=\"Content\" class=\"form-control\">\r\n		</div>\r\n	</div>\r\n	<button ng-click=\"vm.submit(vm.question)\" class=\"btn btn-primary\">Submit</button>\r\n</form>");
$templateCache.put("templates/question/list-questions.html","<div class=\"row\">\r\n	<div class=\"col-md-3\">\r\n		<p class=\"text-center\">Sort by:</p>\r\n		<select ng-model=\"vm.request.sort\" ng-change=\"vm.query(vm.request)\" class=\"form-control\">\r\n			<option value=\"title\">Title</option>\r\n			<option value=\"content\">Content</option>\r\n		</select>\r\n	</div>\r\n	<div class=\"col-md-3\">\r\n		<p class=\"text-center\">Sort direction:</p>\r\n		<select ng-model=\"vm.request.sortDirection\" ng-change=\"vm.query(vm.request)\" class=\"form-control\">\r\n			<option value=\"asc\">Ascending</option>\r\n			<option value=\"desc\">Descending</option>\r\n		</select>\r\n	</div>\r\n	<div class=\"col-md-3\">\r\n		<p class=\"text-center\">Page:</p>\r\n		<input type=\"number\" ng-model=\"vm.request.page\" ng-change=\"vm.query(vm.request)\" class=\"form-control\" />\r\n	</div>\r\n	<div class=\"col-md-3\">\r\n		<p class=\"text-center\">Page size:</p>\r\n		<input type=\"number\" ng-model=\"vm.request.size\" ng-change=\"vm.query(vm.request)\" class=\"form-control\" />\r\n	</div>\r\n</div>\r\n<hr />\r\n<div class=\"row\">\r\n	<div ng-repeat=\"question in vm.list._embedded.questions\">\r\n		<div class=\"alert alert-dismissible alert-info\">\r\n			<button type=\"button\" class=\"close\" data-dismiss=\"alert\" ng-click=vm.delete(question)>Ã—</button>\r\n			<strong class=\"wrap\">{{question.title}}</strong><span class=\"wrap\"> {{question.content}}</span>\r\n		</div>\r\n	</div>\r\n</div>");}]);