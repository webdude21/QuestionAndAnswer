{"version":3,"file":"app.bundle.js","sources":["webpack:///src/app.ts","webpack:///src/app/seed-app.ts","webpack:///src/app/components/home/home.ts","webpack:///src/app/components/about/about.ts","webpack:///src/app/components/questions-list/questions-list.ts","webpack:///src/app/services/question.ts","webpack:///src/app/services/serverRoutes.ts","webpack:///./~/rxjs/add/operator/map.js","webpack:///./~/rxjs/operator/map.js"],"sourcesContent":["import {LocationStrategy, HashLocationStrategy} from '@angular/common';\nimport {bootstrap} from '@angular/platform-browser-dynamic';\nimport {provide, enableProdMode} from '@angular/core';\nimport {HTTP_PROVIDERS} from '@angular/http';\nimport {ROUTER_PROVIDERS} from '@angular/router-deprecated';\n\nimport {SeedApp} from './app/seed-app';\n\nenableProdMode();\n\nbootstrap(SeedApp, [HTTP_PROVIDERS, ROUTER_PROVIDERS, provide(LocationStrategy, { useClass: HashLocationStrategy })])\n    .catch(err => console.error(err));\n\n\n\n/** WEBPACK FOOTER **\n ** src/app.ts\n **/","import {Component} from '@angular/core';\nimport {Router, RouteConfig, ROUTER_DIRECTIVES} from '@angular/router-deprecated';\n\nimport {Home} from './components/home/home';\nimport {About} from './components/about/about';\nimport {QuestionsList} from './components/questions-list/questions-list';\n\n@Component({\n  selector: 'seed-app',\n  providers: [],\n  pipes: [],\n  directives: [ROUTER_DIRECTIVES],\n  templateUrl: 'app/seed-app.html',\n})\n@RouteConfig([\n  { path: '/home', component: Home, name: 'Home', useAsDefault: true },\n  { path: '/about', component: About, name: 'About' },\n  { path: '/questions-list', component: QuestionsList, name: 'QuestionsList'}\n])\nexport class SeedApp {\n  constructor() { }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** src/app/seed-app.ts\n **/","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'home',\n  templateUrl: 'app/components/home/home.html',\n  styleUrls: ['app/components/home/home.css'],\n  providers: [],\n  directives: [],\n  pipes: []\n})\nexport class Home {\n  constructor() {}\n  ngOnInit() {}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** src/app/components/home/home.ts\n **/","import {Component} from '@angular/core';\nimport {Http} from '@angular/http';\n\n\n@Component({\n  selector: 'about',\n  templateUrl: 'app/components/about/about.html',\n  styleUrls: ['app/components/about/about.css'],\n  providers: [],\n  directives: [],\n  pipes: []\n})\nexport class About {\n\n  constructor(http: Http) {\n  }\n\n  ngOnInit() {\n\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** src/app/components/about/about.ts\n **/","\nimport {Component} from '@angular/core';\nimport {QuestionServices} from '../../services/question';\nimport {Observable} from 'rxjs/Observable';\n\n@Component({\n  selector: 'questions-list',\n  templateUrl: 'app/components/questions-list/questions-list.html',\n  styleUrls: ['app/components/questions-list/questions-list.css'],\n  providers: [QuestionServices],\n  directives: [],\n  pipes: []\n})\nexport class QuestionsList {\n  questionsList: Observable<any>;\n  constructor(public questions: QuestionServices) { }\n\n  ngOnInit() {\n    this.questionsList = this.questions.getAll().map(i => i._embedded.questions);\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/components/questions-list/questions-list.ts\n **/","import {Injectable} from \"@angular/core\";\nimport {Http, URLSearchParams} from \"@angular/http\";\nimport {ServerRoutes} from \"./serverRoutes\";\nimport \"rxjs/add/operator/map\";\n\nenum EntityTypes {\n  answers,\n  user\n}\n\n@Injectable()\nexport class QuestionServices {\n\n  constructor(private http: Http) { }\n\n  getAll() {\n    return this.http\n      .get(`${ServerRoutes.QUESTIONS}`)\n      .map(res => res.json());\n  }\n\n  getQuestionBy(id: number, entity?: EntityTypes) {\n    var url = `${ServerRoutes.QUESTIONS}/${id}`;\n    \n    if (entity){\n      url += `/${entity}`;\n    }\n    \n    return this.http.get(url).map(res => res.json());\n  }\n\n  getQuestionsAnswers(id: number) {\n    return this.getQuestionBy(id, EntityTypes.answers);\n  }\n  \n  getQuestionsUser(id: number) {\n    return this.getQuestionBy(id, EntityTypes.user);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/question.ts\n **/","import {Injectable} from \"@angular/core\";\n\nconst BASE_PATH = '/api';\n\n@Injectable()\nexport class ServerRoutes {\n  public static CUSTOM_VIEWS: string = `${BASE_PATH}/customviews`;\n  public static QUESTIONS: string = `${BASE_PATH}/questions`;\n  public static USERS: string = `${BASE_PATH}/users`;\n  public static REGISTER: string = `${BASE_PATH}/authentication/register`;\n  public static CURRENT_USER: string = `${BASE_PATH}/authentication/currentuser`;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/serverRoutes.ts\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar map_1 = require('../../operator/map');\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/map.js\n ** module id = 339\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    if (typeof project !== 'function') {\n        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return this.lift(new MapOperator(project, thisArg));\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/map.js\n ** module id = 340\n ** module chunks = 0\n **/"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;;;;;;;;;;;;;;;;;;ACXA;AACA;AAEA;AACA;AACA;AAcA;AACA;AAAA;AAbA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAGA;AAAA;AAFA;;;;;;;;;;;;;;;;;;ACnBA;AAUA;AACA;AAAA;AACA;AAVA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAIA;AAAA;AAHA;;;;;;;;;;;;;;;;;;ACVA;AACA;AAWA;AAEA;AACA;AAEA;AAEA;AAfA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AASA;AAAA;AARA;;;;;;;;;;;;;;;;;;ACXA;AACA;AAWA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAdA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAQA;AAAA;AAPA;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA3BA;AAAA;;AAAA;AA4BA;AAAA;AA3BA;;;;;;;;;;;;;;;;;;ACXA;AAEA;AAGA;AAAA;AAMA;AALA;AACA;AACA;AACA;AACA;AANA;AAAA;;AAAA;AAOA;AAAA;AANA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;","sourceRoot":""}